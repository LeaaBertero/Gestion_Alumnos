@* @page "/api/ListaAlumnos/crear"
@inject IHttpServicio http
@inject NavigationManager navigationManager

<!DOCTYPE html>
<html>
<head>
    <title>Crear lista alumnos</title>
</head>

<body>

   
    <header>
        <h1>Hola, acá podes cargar un alumno nuevo</h1>
    </header>

   
    <main>
        <EditForm Model="alumno" OnValidSubmit="Grabar">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label>Nombre</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.Nombre">
                    <ValidationMessage For="@(() => alumno.Nombre)" />
                </div>

            </div>

            <div class="form-group">
                <label>Sexo</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.Sexo">
                    <ValidationMessage For="@(() => alumno.Sexo)" />
                </div>

            </div>

            <div class="form-group">
                <label>fecha de nacimiento</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.FechaNacimiento">
                    <ValidationMessage For="@(() => alumno.FechaNacimiento)" />
                </div>

            </div>

            <div class="form-group">
                <label>Edad</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.Edad">
                    <ValidationMessage For="@(() => alumno.Edad)" />
                </div>

            </div>

            <div class="form-group">
                <label>Cuil</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.CUIL">
                    <ValidationMessage For="@(() => alumno.CUIL)" />
                </div>

            </div>

            <div class="form-group">
                <label>País</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.Pais">
                    <ValidationMessage For="@(() => alumno.Pais)" />
                </div>

            </div>

            <div class="form-group">
                <label>Provincia</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.Provincia">
                    <ValidationMessage For="@(() => alumno.Provincia)" />
                </div>

            </div>

            <div class="form-group">
                <label>Título Base</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.TituloBase">
                    <ValidationMessage For="@(() => alumno.TituloBase)" />
                </div>

            </div>

            <div class="form-group">
                <label>Cus</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.CUS">
                    <ValidationMessage For="@(() => alumno.CUS)" />
                </div>

            </div>

            <div class="form-group">
                <label>Estado</label>

                <div>
                    <input class="form-control" @bind-value="@alumno.Estado">
                    <ValidationMessage For="@(() => alumno.Estado)" />
                </div>

            </div>


            <div>
                <button class="btn btn-success" type="submit">Cargar datos</button>
                <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
            </div>

        </EditForm> 

       
       
    </main>

    
    <footer>

    </footer>

</body>
</html>

@code {

    private Alumno alumno = new Alumno();

    private async Task Grabar() 
    {
        var httpRespuesta = await http.Post<Alumno>("api/Alumnos", alumno);

        if (httpRespuesta.err)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Alumnos");

    }

    private void Cancelar() 
    {
        navigationManager.NavigateTo("/api/Alumnos");
    }


}
 *@

@page "/api/ListaAlumnos/crear"
@inject IHttpServicio http
@inject NavigationManager navigationManager

<!DOCTYPE html>
<html>
<head>
    <title>Crear lista alumnos</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
   
    <header class="bg-primary text-white text-center py-3">
        <h1>Ingresá acá los datos de los alumnos</h1>
    </header>

  
    <main class="container mt-4">
        <EditForm Model="Nuevoalumno" OnValidSubmit="Grabar">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="nombre">Nombre</label>
                <input id="nombre" class="form-control" @bind-value="@Nuevoalumno.Nombre">
                <ValidationMessage For="@(() => Nuevoalumno.Nombre)" />
            </div>

            <div class="form-group">
                <label for="sexo">Sexo</label>
                <input id="sexo" class="form-control" @bind-value="@Nuevoalumno.Sexo">
                <ValidationMessage For="@(() => Nuevoalumno.Sexo)" />
            </div>

            <div class="form-group">
                <label for="fechaNacimiento">Fecha de nacimiento</label>
                <input id="fechaNacimiento" type="date" class="form-control" @bind-value="@Nuevoalumno.FechaNacimiento">
                <ValidationMessage For="@(() => Nuevoalumno.FechaNacimiento)" />
            </div>

            <div class="form-group">
                <label for="edad">Edad</label>
                <input id="edad" class="form-control" @bind-value="@Nuevoalumno.Edad">
                <ValidationMessage For="@(() => Nuevoalumno.Edad)" />
            </div>

            <div class="form-group">
                <label for="cuil">Cuil</label>
                <input id="cuil" class="form-control" @bind-value="@Nuevoalumno.CUIL">
                <ValidationMessage For="@(() => Nuevoalumno.CUIL)" />
            </div>

            <div class="form-group">
                <label for="pais">País</label>
                <input id="pais" class="form-control" @bind-value="@Nuevoalumno.Pais">
                <ValidationMessage For="@(() => Nuevoalumno.Pais)" />
            </div>

            <div class="form-group">
                <label for="provincia">Provincia</label>
                <input id="provincia" class="form-control" @bind-value="@Nuevoalumno.Provincia">
                <ValidationMessage For="@(() => Nuevoalumno.Provincia)" />
            </div>

            <div class="form-group">
                <label for="tituloBase">Título Base</label>
                <input id="tituloBase" class="form-control" @bind-value="@Nuevoalumno.TituloBase">
                <ValidationMessage For="@(() => Nuevoalumno.TituloBase)" />
            </div>

            <div class="form-group">
                <label for="cus">Cus</label>
                <input id="cus" class="form-control" @bind-value="@Nuevoalumno.CUS">
                <ValidationMessage For="@(() => Nuevoalumno.CUS)" />
            </div>

            <div class="form-group">
                <label for="estado">Estado</label>
                <input id="estado" class="form-control" @bind-value="@Nuevoalumno.Estado">
                <ValidationMessage For="@(() => Nuevoalumno.Estado)" />
            </div>

            <div class="d-flex justify-content-between">
                <button class="btn btn-success" type="submit">Cargar datos</button>
                <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
            </div>
        </EditForm>
    </main>

    
    <footer class="bg-primary text-white text-center py-2">
        &copy; 2025 Gestión de alumnos
    </footer>

</body>
</html>

@code {
    private Alumno Nuevoalumno = new Alumno();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Alumno>("api/Alumnos", Nuevoalumno);

        if (httpRespuesta.err)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Alumnos");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Alumnos");
    }
}
