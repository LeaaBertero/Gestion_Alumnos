@page "/api/ListaAlumnos/crear"
@inject IHttpServicio http
@inject NavigationManager navigationManager

<!DOCTYPE html>

<html>

<head>

    <title>Crear lista alumnos</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    
   
    <link href="./css/CrearListaAlumnos.css" rel="stylesheet" />

</head>

<body>
   
    <header class="bg-primary text-white text-center py-3">
        <h1>Ingresá acá los datos de los alumnos</h1>
    </header>

  
    <main class="container mt-4">
        <EditForm Model="NuevoAlumno" OnValidSubmit="Grabar">
            <DataAnnotationsValidator />

            <div class="back-formulario">
                
                <div>
                    <label for="nombre">Nombre</label>
                    <input id="nombre" class="form-control" @bind-value="@NuevoAlumno.Nombre">
                    <ValidationMessage For="@(() => NuevoAlumno.Nombre)" />
                </div>

                <div>
                    <label for="sexo">Sexo</label>
                    <input id="sexo" class="form-control" @bind-value="@NuevoAlumno.Sexo">
                    <ValidationMessage For="@(() => NuevoAlumno.Sexo)" />
                </div>

                <div>
                    <label for="fechaNacimiento">Fecha de nacimiento</label>
                    <input id="fechaNacimiento" type="date" class="form-control" @bind-value="@NuevoAlumno.FechaNacimiento">
                    <ValidationMessage For="@(() => NuevoAlumno.FechaNacimiento)" />
                </div>

                <div>
                    <label for="edad">Edad</label>
                    <input id="edad" class="form-control" @bind-value="@NuevoAlumno.Edad">
                    <ValidationMessage For="@(() => NuevoAlumno.Edad)" />
                </div>

                <div>
                    <label for="cuil">Cuil</label>
                    <input id="cuil" class="form-control" @bind-value="@NuevoAlumno.CUIL">
                    <ValidationMessage For="@(() => NuevoAlumno.CUIL)" />
                </div>
           
                <div>
                    <label for="pais">País</label>
                    <input id="pais" class="form-control" @bind-value="@NuevoAlumno.Pais">
                    <ValidationMessage For="@(() => NuevoAlumno.Pais)" />
                </div>
            
                <div>
                    <label for="provincia">Provincia</label>
                    <input id="provincia" class="form-control" @bind-value="@NuevoAlumno.Provincia">
                    <ValidationMessage For="@(() => NuevoAlumno.Provincia)" />
                </div>
            
                <div>
                    <label for="tituloBase">Título Base</label>
                    <input id="tituloBase" class="form-control" @bind-value="@NuevoAlumno.TituloBase">
                    <ValidationMessage For="@(() => NuevoAlumno.TituloBase)" />
                </div>

                <div>
                    <label for="FotocopiaDNI">Fotocopia DNI</label>
                    <input id="FotocopiaDNI" class="form-control" @bind-value="@NuevoAlumno.FotocopiaDNI">
                    <ValidationMessage For="@(() => NuevoAlumno.FotocopiaDNI)" />
                </div> 
           
                <div>
                    <label for="ConstanciaCUIL">Constancia de CUIL</label>
                    <input id="ConstanciaCUIL" class="form-control" @bind-value="@NuevoAlumno.ConstanciaCUIL">
                    <ValidationMessage For="@(() => NuevoAlumno.ConstanciaCUIL)" />
                </div>

                <div>
                    <label for="PartidaNacimiento">Partida de Nacimiento</label>
                    <input id="PartidaNacimiento" class="form-control" @bind-value="@NuevoAlumno.PartidaNacimiento">
                    <ValidationMessage For="@(() => NuevoAlumno.PartidaNacimiento)" />
                </div>

                <div>
                    <label for="Analitico">Analítico</label>
                    <input id="Analitico" class="form-control" @bind-value="@NuevoAlumno.Analitico">
                    <ValidationMessage For="@(() => NuevoAlumno.Analitico)" />
                </div>
            
                <div>
                    <label for="FotoCarnet">Foto Carnet</label>
                    <input id="FotoCarnet" class="form-control" @bind-value="@NuevoAlumno.FotoCarnet">
                    <ValidationMessage For="@(() => NuevoAlumno.FotoCarnet)" />
                </div>
          
                <div>
                    <label for="CUS">Cus</label>
                    <input id="CUS" class="form-control" @bind-value="@NuevoAlumno.CUS">
                    <ValidationMessage For="@(() =>NuevoAlumno.CUS)" />
                </div>
           
                <div>
                    <label for="Estado">Estado</label>
                    <input id="Estado" class="form-control" @bind-value="@NuevoAlumno.Estado">
                    <ValidationMessage For="@(() => NuevoAlumno.Estado)" />
                </div>

                <div class="backround-botones d-flex justify-content-around align-items-lg-center p-4 m-4 shadow border-5 rounded-pill">

                    <div class="btn-cargarDatos">
                        <button class="btn btn-success" type="submit">Cargar datos</button>
                    </div>
                
                    <div class="btn-cancelar">
                        <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
                    </div>

                </div>


            </div>

        </EditForm>

    </main>

    
    <footer class="bg-primary text-white text-center py-2">
        &copy; 2025 Gestión de alumnos
    </footer>

</body>
</html>

@code {
    private Alumno NuevoAlumno = new Alumno();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Alumno>("api/Alumnos", NuevoAlumno);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Alumnos");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Alumnos");
    }
}
